// Code generated by mockery v2.53.4. DO NOT EDIT.

package mocks

import (
	context "context"
	models "wbL0/internal/models"

	mock "github.com/stretchr/testify/mock"

	time "time"
)

// OrderRedisRepoInterface is an autogenerated mock type for the OrderRedisRepoInterface type
type OrderRedisRepoInterface struct {
	mock.Mock
}

// GetOrder provides a mock function with given fields: ctx, orderUID
func (_m *OrderRedisRepoInterface) GetOrder(ctx context.Context, orderUID string) (*models.FullOrder, error) {
	ret := _m.Called(ctx, orderUID)

	if len(ret) == 0 {
		panic("no return value specified for GetOrder")
	}

	var r0 *models.FullOrder
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string) (*models.FullOrder, error)); ok {
		return rf(ctx, orderUID)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string) *models.FullOrder); ok {
		r0 = rf(ctx, orderUID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.FullOrder)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, orderUID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// RestoreOrders provides a mock function with given fields: ctx, orders, ttl
func (_m *OrderRedisRepoInterface) RestoreOrders(ctx context.Context, orders []*models.FullOrder, ttl time.Duration) error {
	ret := _m.Called(ctx, orders, ttl)

	if len(ret) == 0 {
		panic("no return value specified for RestoreOrders")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, []*models.FullOrder, time.Duration) error); ok {
		r0 = rf(ctx, orders, ttl)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SetOrder provides a mock function with given fields: ctx, order, ttl
func (_m *OrderRedisRepoInterface) SetOrder(ctx context.Context, order *models.FullOrder, ttl time.Duration) error {
	ret := _m.Called(ctx, order, ttl)

	if len(ret) == 0 {
		panic("no return value specified for SetOrder")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *models.FullOrder, time.Duration) error); ok {
		r0 = rf(ctx, order, ttl)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewOrderRedisRepoInterface creates a new instance of OrderRedisRepoInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewOrderRedisRepoInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *OrderRedisRepoInterface {
	mock := &OrderRedisRepoInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
